pipeline {
    agent any

    environment {
        BAT_FILE = "Jenkins/example1.bat" // Full path to your .bat file
        RECIPIENT = "mincelichan@gmail.com" // Recipient's email
    }

    stages {
        stage('Setup Environment') {
            steps {
                script {
                    // Execute the .bat file to set up environment variables or prerequisites
                    bat "${BAT_FILE}"
                }
            }
        }

        stage('Check Docker Compose') {
            steps {
                script {
                    bat 'docker-compose --version'
                }
            }
        }

        stage('Check Docker Daemon') {
            steps {
                script {
                    bat 'docker info'
                }
            }
        }

        stage('Run Docker-Compose in Parallel') {
            parallel {
                stage('Service 1: Model Services') {
                    steps {
                        dir('model') { // Navigate to the model service directory
                            script {
                                // Run the model service using docker-compose
                                bat 'docker-compose up -d --build'
                            }
                        }
                    }
                }

                stage('Service 2: Backend') {
                    steps {
                        dir('backend') { // Navigate to the backend service directory
                            script {
                                // Run the backend service using docker-compose
                                bat 'docker-compose up -d --build'
                            }
                        }
                    }
                }
            }
        }

        stage('Verify Services') {
            steps {
                script {
                    // Example health check for Model service
                    bat 'curl -s http://localhost:8000 || echo "Model service is not reachable"'

                    // Example health check for Backend service
                    bat 'curl -s http://localhost:8001 || echo "Backend service is not reachable"'
                }
            }
        }
    }

    post {
        success {
            echo "Build succeeded and services are running!"
            emailext (
                subject: "Jenkins Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """<p>The build and service startup were successful.</p>
                         <p>Job: ${env.JOB_NAME}</p>
                         <p>Build: <a href='${env.BUILD_URL}'>${env.BUILD_NUMBER}</a></p>""",
                to: "${RECIPIENT}"
            )
        }
        failure {
            echo "Build failed or services are not running!"
            emailext (
                subject: "Jenkins Build FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """<p>The build or service startup failed.</p>
                         <p>Job: ${env.JOB_NAME}</p>
                         <p>Build: <a href='${env.BUILD_URL}'>${env.BUILD_NUMBER}</a></p>""",
                to: "${RECIPIENT}"
            )
        }
    }
}
