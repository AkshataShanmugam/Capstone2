pipeline {
    agent any

    environment {
        BAT_FILE = "Jenkins/example.bat" // Replace with the full path to your .bat file
        RECIPIENT = "mincelichan@gmail.com" // Replace with the recipient's email
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Ensure workspace cleanup
                    echo 'Initializing workspace...'
                    cleanWs()
                }
            }
        }
        stage('Run AI Containers') {
            parallel {
                stage('AI Containers Setup') {
                    steps {
                        dir('model/google_search') {
                            script {
                                writeFile file: '.env', text: '''
                                SERP_API_KEY=48f5dd2aef570480a460533ece71ef9833ccbaca3fa1e8ef5721168ca6f94e96
                                GROC_API_KEY=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
                                '''
                            }
                        }
                        dir('model/youtube_comment_summary') {
                            script {
                                writeFile file: '.env', text: '''
                                YOUTUBE_API_KEY=AIzaSyBmXn2FOp806pR9zsWJOSxYeF5rgMx6UQA
                                GROQ_API_KEY=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
                                HUGGINGFACE_API_KEY=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
                                '''
                            }
                        }
                        dir('model/chat_with_ai') {
                            script {
                                writeFile file: '.env', text: '''
                                GROC_API_KEY=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
                                '''
                            }
                        }
                        dir('model') {
                            sh 'docker-compose down'
                            sh 'docker-compose up --build -d'
                        }
                    }
                }
                stage('MongoDB Backend Setup') {
                    steps {
                        dir('backend') {
                            script {
                                writeFile file: '.env', text: '''
                                MONGO_URI=mongodb+srv://username1:eWJeQrOM4OdkU9Oi@cluster0.dpbpr.mongodb.net/?retryWrites=true&w=majority
                                PORT=5000
                                '''
                            }
                            sh 'docker-compose down'
                            sh 'docker-compose up --build -d'
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                echo 'Cleaning up workspace...'
                cleanWs()
            }
        }
    }
}